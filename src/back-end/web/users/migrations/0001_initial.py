# Generated by Django 4.0.4 on 2022-05-11 21:47

import django.core.validators
from django.db import migrations, models
import django.utils.timezone
import users.validators


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='User',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('nickname', models.CharField(max_length=8, unique=True, validators=[users.validators.BaseValidatorWithCode(code='invalid_min_length', validator=django.core.validators.MinLengthValidator(1, message='닉네임은 1자 이상 입력해야 합니다.')), users.validators.BaseValidatorWithCode(code='invalid_max_length', validator=django.core.validators.MaxLengthValidator(8, message='닉네임은 최대 8자까지 입력 가능합니다.')), django.core.validators.RegexValidator(code='invalid_characters', message='닉네임은 한글, 숫자, 영문자만 사용 가능합니다.', regex='^[가-힣a-zA-Z0-9]+$')])),
                ('name', models.CharField(max_length=30)),
                ('email', models.EmailField(max_length=50)),
                ('cell_phone_number', models.CharField(max_length=14, validators=[django.core.validators.RegexValidator(code='invalid_cell_phone_number', message='핸드폰 번호는 01X-XXX-XXXX 혹은 01X-XXXX-XXXX 형식이어야 합니다.', regex='^01\\d-\\d{3,4}-\\d{4}$')])),
                ('profile_image_url', models.URLField(blank=True, null=True)),
                ('birthday', models.DateField()),
                ('is_active', models.BooleanField(default=True)),
                ('is_verified', models.BooleanField(default=False)),
                ('is_admin', models.BooleanField(default=False)),
                ('total_mileages', models.PositiveIntegerField(default=0)),
                ('withdrawal_date_time', models.DateTimeField(blank=True, null=True)),
                ('registration_date_time', models.DateTimeField(default=django.utils.timezone.now)),
                ('last_login_date_time', models.DateTimeField(blank=True, null=True)),
            ],
            options={
                'db_table': 'user',
                'ordering': ('-registration_date_time',),
            },
        ),
    ]
