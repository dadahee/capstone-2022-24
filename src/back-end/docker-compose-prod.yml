version : '3'
services:
  web:
    container_name: web_prod
    build:
      context: .
      dockerfile : web/Dockerfile-prod
      args:
        BASE: ${BASE}
        WEB: ${WEB}
        STATIC: ${STATIC}
        WEB_PORT: ${WEB_PORT}
    command: sh -c "python manage.py prod makemigrations &&
                    python manage.py prod migrate &&
                    python manage.py loaddata data.json &&
                    python manage.py prod collectstatic --no-input &&
                    bash ./config/start.sh"
    restart: on-failure
    volumes:
      - ./web:${WEB}
      - ./environment:${ENV}
    expose:
      - "${WEB_PORT}"
    environment:
      - MODULE_NAME=${MODULE_NAME}
      - VARIABLE_NAME=${VARIABLE_NAME}
      - GUNICORN_CONFIG=${GUNICORN_CONFIG}
      - SETTINGS_MODULE=${SETTINGS_MODULE}
    healthcheck:
      test: [ "CMD", "curl", "-f", "http://${WEB_HOST}:${WEB_PORT}" ]
      interval: 1m
      timeout: 10s
      retries: 5

  nginx:
    container_name: nginx_prod
    image: nginx:stable
    restart: on-failure
    volumes:
      - ./nginx:/etc/nginx/templates
    environment:
      - WEB_HOST=${WEB_HOST}
      - WEB_DOCKERNAME=${WEB_DOCKERNAME}
      - WEB_PORT=${WEB_PORT}
      - STATIC_LOCATION=${STATIC_LOCATION}
      - MEDIA_LOCATION=${MEDIA_LOCATION}
      - AWS_S3_URL=${AWS_S3_URL}
    ports:
      - "80:80" # http
      - "443:443" # https
    depends_on:
      - web

  # TODO
  # Celery
